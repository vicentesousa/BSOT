function [kaSequence] = genKasamiSequence(N)
% Polinomio Gerador: P(x)=x^11+x^9+1
switch N
    case 2047
%Aproximation-it doesn't generate polynomials with odd "n" (2^n=2048, n=11)
KAgen=comm.KasamiSequence('Polynomial',    [1 0 0 1 0 0 0 0 0 0 1], ...
                      'InitialConditions', [1 0 0 0 0 0 0 0 0 1], ...
                      'SamplesPerFrame',    N);         
    case 1023
KAgen=comm.KasamiSequence('Polynomial',    [1 0 0 1 0 0 0 0 0 0 1], ...
                      'InitialConditions', [1 0 0 0 0 0 0 0 0 1], ...
                      'SamplesPerFrame',    N);
    case 511
%Aproximation - it doesn't generate polynomials with odd "n" (2^n=512, n=9)
KAgen=comm.KasamiSequence('Polynomial',    [1 0 1 1 1 0 0 0 1], ...
                      'InitialConditions', [1 0 0 0 0 0 0 1], ...
                      'SamplesPerFrame',    N);
    case 255
KAgen=comm.KasamiSequence('Polynomial',    [1 0 1 1 1 0 0 0 1], ...
                      'InitialConditions', [1 0 0 0 0 0 0 1], ...
                      'SamplesPerFrame',    N);
    case 127
%Aproximation - it doesn't generate polynomials with odd "n" (2^n=128, n=7)
KAgen=comm.KasamiSequence('Polynomial',    [1 0 1 1 1 0 0 0 1], ...
                      'InitialConditions', [1 0 0 0 0 0 0 1], ...
                      'SamplesPerFrame',    N);     
    case 63
KAgen=comm.KasamiSequence('Polynomial',    [1 1 0 0 0 0 1], ...
                      'InitialConditions', [1 0 0 0 0 1], ...
                      'SamplesPerFrame',    N);   
end

kaSequence=KAgen()';
end